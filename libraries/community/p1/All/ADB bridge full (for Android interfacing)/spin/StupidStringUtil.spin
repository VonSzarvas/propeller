pub IsDigit(char)    return (char > constant("0"-1) and char < constant("9"+1))  pub startswith(StringAddr1,StringAddr2) | t1,t2  ' allow comparing if String1 is bigger than String2: useful for parametered commands    t1 := strsize(StringAddr1)    t2 := strsize(StringAddr2)    if t1==t2       return strcomp(StringAddr1,StringAddr2)    if t1>t2       result:=byte[StringAddr1+t2]~       t1:=strcomp(StringAddr1,StringAddr2)       byte[StringAddr1+t2]:=result       return t1pub upcase(ByteVal)'' go to uppercase, 1 character -- that's all it does (used in parsing)    if (ByteVal > constant("a"-1) and ByteVal < constant("z"+1))         return (ByteVal-$20)    return ByteVal    pub StupidNumberParser(StringAddr) ' only for 00000 to 99999 but for what we're doing here, it's enough    result~~    if IsDigit(byte[StringAddr+0])      result:=byte[StringAddr+0] - "0"     if IsDigit(byte[StringAddr+1])       result:=result*10 + byte[StringAddr+1] - "0"      if IsDigit(byte[StringAddr+2])        result:=result*10 + byte[StringAddr+2] - "0"       if IsDigit(byte[StringAddr+3])         result:=result*10 + byte[StringAddr+3] - "0"        if IsDigit(byte[StringAddr+4])          result:=result*10 + byte[StringAddr+4] - "0"    'com.dec(0,result)