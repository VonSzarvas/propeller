{{///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// GP2D02 Infrared Distance Sensor Engine//// Author: Kwabena W. Agyeman// Updated: 7/27/2010// Designed For: P8X32A// Version: 1.0//// Copyright (c) 2010 Kwabena W. Agyeman// See end of file for terms of use.//// Update History://// v1.0 - Original release - 7/27/2010.//// For each included copy of this object only one spin interpreter should access it at a time.//// Nyamekye,//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// Sensor Circuit:////                3.3V//                 |//                 -- GP2D02 Power// VINPinNumber  ---- GP2D02 VINPinNumber// VOUTPinNumber ---- GP2D02 VOUTPinNumber//                 -- GP2D02 Ground//                 |//                GND///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////}}PUB readDistanceLinear(VINPinNumber, VOUTPinNumber) '' 10 Stack Longs'' ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////'' // Returns the linear distance reading from the sensor in centimeters.'' //'' // The sensor has a minimum distance range of about 8cm. Bogus values are produced by objects closer than this.'' //'' // VINPinNumber - Sensor VIN pin number.'' // VOUTPinNumber - Sensor VOUT pin number.'' ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  return lookupTable[(readDistanceRaw(VINPinNumber, VOUTPinNumber) - 40) #> 0]PUB readDistanceRaw(VINPinNumber, VOUTPinNumber) '' 5 Stack Longs'' ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////'' // Returns the raw (non linear and unitless) distance reading from the sensor.'' //'' // The sensor has a minimum distance range of about 8cm. Bogus values are produced by objects closer than this.'' //'' // VINPinNumber - Sensor VIN pin number.'' // VOUTPinNumber - Sensor VOUT pin number.'' ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  VINPinNumber := ((VINPinNumber <# 31) #> 0)  VOUTPinNumber := ((VOUTPinNumber <# 31) #> 0)  if(VINPinNumber <> VOUTPinNumber)    dira[VINPinNumber] := true    dira[VOUTPinNumber] := false    outa[VINPinNumber] := false    waitcnt(((clkfreq / 1_000) * 70) + cnt)    repeat 8      outa[VINPinNumber] := true      outa[VINPinNumber] := false      result += result + ina[VOUTPinNumber]    outa[VINPinNumber] := true    waitcnt((clkfreq / 500) + cnt)DAT' //////////////////////Lookup Table///////////////////////////////////////////////////////////////////////////////////////////lookupTable           ' byte 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255 ' 0 - 15                      ' byte 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255 ' 16 - 31                      ' byte 255, 255, 255, 255, 255, 255, 255, 255, 255, 255                               ' 32 - 41                        byte 255, 245, 240, 235, 230, 225                                                   ' 42 - 47                        byte 220, 215, 210, 205, 200, 195, 190, 185, 180, 175, 170, 165, 160, 155, 150, 145 ' 48 - 63                        byte 140, 135, 130, 125, 120, 115, 110, 105, 100, 095, 090, 085, 080, 075, 070, 065 ' 64 - 79                        byte 063, 062, 061, 060, 059, 059, 058, 058, 057, 057, 056, 056, 055, 054, 054, 053 ' 80 - 95                        byte 053, 052, 052, 051, 051, 050, 050, 049, 049, 048, 048, 047, 047, 046, 046, 046 ' 96 - 111                        byte 045, 045, 045, 044, 044, 043, 043, 042, 042, 041, 041, 040, 040, 039, 038, 038 ' 112 - 127                        byte 037, 037, 036, 036, 035, 034, 033, 032, 031, 031, 030, 030, 029, 029, 028, 028 ' 128 - 143                        byte 027, 027, 026, 026, 025, 025, 024, 024, 023, 023, 023, 022, 022, 022, 021, 021 ' 144 - 159                        byte 020, 020, 020, 020, 019, 019, 019, 019, 019, 019, 018, 018, 018, 018, 018, 018 ' 160 - 175                        byte 017, 017, 017, 017, 016, 016, 016, 016, 016, 016, 015, 015, 015, 015, 015, 015 ' 176 - 191                        byte 014, 014, 014, 014, 013, 013, 013, 013, 013, 013, 013, 013, 012, 012, 012, 012 ' 192 - 207                        byte 012, 012, 011, 011, 011, 011, 011, 011, 011, 010, 010, 010, 010, 010, 010, 010 ' 208 - 223                        byte 010, 009, 009, 009, 009, 009, 009, 008, 008, 008, 008, 008, 008, 008, 007, 007 ' 224 - 239                        byte 007, 007, 007, 007, 006, 006, 006, 006, 006, 006, 005, 005, 005, 005, 005, 005 ' 240 - 255' /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////{{/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////                                                  TERMS OF USE: MIT License///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation// files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy,// modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the// Software is furnished to do so, subject to the following conditions://// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the// Software.//// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE// WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////}}